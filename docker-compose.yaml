# #
# # This docker-compose file starts and runs:
# # * A redis server
# # * A 1-node kafka cluster
# # * A 1-zookeeper ensemble
# # * Kafka Connect with Redis Source
# # * 3 Java Applications- Trucking-Simulation, Banking-Simulation, and STEDI
# # * A Spark master
# # * A Spark worker
# # * Kafka UI for monitoring
# # * Debezium for CDC
# version: '3.7'
# services:
#   redis:
#     image: redis:6.0.6
#     ports:
#       - "6379:6379"
#   zookeeper:
#     image: confluentinc/cp-zookeeper:5.5.1
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: "2181"
#   kafka:
#     image: confluentinc/cp-kafka:5.5.1
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 0
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"
#       KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
#     depends_on:
#       - "zookeeper"
  
#   # Kafka UI for monitoring Kafka cluster
#   kafka-ui:
#     image: provectuslabs/kafka-ui:latest
#     container_name: kafka-ui
#     depends_on:
#       - kafka
#       - zookeeper
#     ports:
#       - "8090:8080"
#     environment:
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
#       KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#       KAFKA_CLUSTERS_0_READONLY: false
#       KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
#       KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083
#       KAFKA_CLUSTERS_0_KAFKACONNECT_1_NAME: debezium-connect
#       KAFKA_CLUSTERS_0_KAFKACONNECT_1_ADDRESS: http://debezium-connect:8083
#     restart: unless-stopped

#   # Debezium Connect for Change Data Capture
#   debezium-connect:
#     image: debezium/connect:2.4
#     container_name: debezium-connect
#     depends_on:
#       - kafka
#       - zookeeper
#     ports:
#       - "8084:8083"
#     environment:
#       BOOTSTRAP_SERVERS: kafka:19092
#       GROUP_ID: debezium-group
#       CONFIG_STORAGE_TOPIC: debezium-connect-configs
#       OFFSET_STORAGE_TOPIC: debezium-connect-offsets
#       STATUS_STORAGE_TOPIC: debezium-connect-status
#       CONFIG_STORAGE_REPLICATION_FACTOR: 1
#       OFFSET_STORAGE_REPLICATION_FACTOR: 1
#       STATUS_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
#       CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
#       CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_REST_ADVERTISED_HOST_NAME: debezium-connect
#       CONNECT_PLUGIN_PATH: /kafka/connect
#     restart: unless-stopped

#   banking-simulation:
#     image: gcr.io/simulation-images/banking-simulation
#     environment:
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#       REDIS_DB: 0
#       KAFKA_BROKER: kafka:19092
#     depends_on:
#       - "kafka"
#       - "redis"
#   trucking-simulation:
#     image: gcr.io/simulation-images/trucking-simulation
#     environment:
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#       REDIS_DB: 0
#       KAFKA_BROKER: kafka:19092
#     depends_on:
#       - "kafka"
#       - "redis"      
#   stedi:
#     image: gcr.io/simulation-images/stedi
#     ports: 
#     - "4567:4567"
#     environment:
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#       REDIS_DB: 0
#       KAFKA_BROKER: kafka:19092
#       KAFKA_RISK_TOPIC: your-topic-here
#     depends_on:
#       - "kafka"
#       - "redis"      
#   connect:
#     image: gcr.io/simulation-images/kafka-connect-redis-source
#     ports:
#     - "8083:8083"
#     - "5005:5005"
#     environment:
#       CONNECT_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:19092"
#       CONNECT_GROUP_ID: "connect"
#       CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
#       CONNECT_PLUGIN_PATH: "/usr/share/java"
#       CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#       CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#       CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
#       CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
#       CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
#       CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
#       CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
#       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
#       CONNECT_DEBUG: "y"
#       DEBUG_SUSPEND_FLAG: "y"
#       CLASSPATH: "/usr/share/java/kafka-connect-redis-source/*"
#     depends_on:
#     - "kafka"
#     - "redis"
#   spark:
#     image: docker.io/bitnami/spark:3-debian-10
#     environment:
#       - SPARK_MODE=master
#       - SPARK_RPC_AUTHENTICATION_ENABLED=no
#       - SPARK_RPC_ENCRYPTION_ENABLED=no
#       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#       - SPARK_SSL_ENABLED=no
#     ports:
#       - '8080:8080'
#     volumes:
#       - ./:/home/workspace/
#       - ./spark/jars:/opt/bitnami/spark/.ivy2 
#   spark-worker-1:
#     image: docker.io/bitnami/spark:3-debian-10
#     environment:
#       - SPARK_MODE=worker
#       - SPARK_MASTER_URL=spark://spark:7077
#       - SPARK_WORKER_MEMORY=1G
#       - SPARK_WORKER_CORES=1
#       - SPARK_RPC_AUTHENTICATION_ENABLED=no
#       - SPARK_RPC_ENCRYPTION_ENABLED=no
#       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#       - SPARK_SSL_ENABLED=no
#     volumes:
#       - ./:/home/workspace/
#       - ./spark/jars:/opt/bitnami/spark/.ivy2
#
# This docker-compose file starts and runs:
# * A redis server
# * A 3-node kafka cluster
# * A 3-zookeeper ensemble
# * Kafka Connect with Redis Source
# * 3 Java Applications- Trucking-Simulation, Banking-Simulation, and STEDI
# * A Spark master with 3 workers (cluster mode)
# * Kafka UI for monitoring
# * Debezium for CDC
version: '3.7'
services:
  redis:
    image: redis:6.0.6
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Zookeeper Ensemble (3 nodes)
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    restart: unless-stopped

  zookeeper-2:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper-2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    restart: unless-stopped

  zookeeper-3:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper-3
    ports:
      - "2183:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    restart: unless-stopped

  # Kafka Cluster (3 brokers)
  kafka-1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - "zookeeper-1"
      - "zookeeper-2"
      - "zookeeper-3"
    restart: unless-stopped

  kafka-2:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-2
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-2:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - "zookeeper-1"
      - "zookeeper-2"
      - "zookeeper-3"
    restart: unless-stopped

  kafka-3:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-3
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-3:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - "zookeeper-1"
      - "zookeeper-2"
      - "zookeeper-3"
    restart: unless-stopped

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_CLUSTERS_0_READONLY: false
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_NAME: debezium-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_ADDRESS: http://debezium-connect:8083
    restart: unless-stopped

  # Debezium Connect for Change Data Capture
  debezium-connect:
    image: debezium/connect:2.4
    container_name: debezium-connect
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8086:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      GROUP_ID: debezium-group
      CONFIG_STORAGE_TOPIC: debezium-connect-configs
      OFFSET_STORAGE_TOPIC: debezium-connect-offsets
      STATUS_STORAGE_TOPIC: debezium-connect-status
      CONFIG_STORAGE_REPLICATION_FACTOR: 3
      OFFSET_STORAGE_REPLICATION_FACTOR: 3
      STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: debezium-connect
      CONNECT_PLUGIN_PATH: /kafka/connect
    restart: unless-stopped

  # Application Services
  banking-simulation:
    image: gcr.io/simulation-images/banking-simulation
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      KAFKA_BROKER: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      - "kafka-1"
      - "kafka-2"
      - "kafka-3"
      - "redis"
    restart: unless-stopped

  trucking-simulation:
    image: gcr.io/simulation-images/trucking-simulation
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      KAFKA_BROKER: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      - "kafka-1"
      - "kafka-2"
      - "kafka-3"
      - "redis"
    restart: unless-stopped

  stedi:
    image: gcr.io/simulation-images/stedi
    ports: 
    - "4567:4567"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      KAFKA_BROKER: kafka-1:19092,kafka-2:19092,kafka-3:19092
      KAFKA_RISK_TOPIC: your-topic-here
    depends_on:
      - "kafka-1"
      - "kafka-2"
      - "kafka-3"
      - "redis"
    restart: unless-stopped

  connect:
    image: gcr.io/simulation-images/kafka-connect-redis-source
    ports:
    - "8083:8083"
    - "5005:5005"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-1:19092,kafka-2:19092,kafka-3:19092"
      CONNECT_GROUP_ID: "connect"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_DEBUG: "y"
      DEBUG_SUSPEND_FLAG: "y"
      CLASSPATH: "/usr/share/java/kafka-connect-redis-source/*"
    depends_on:
    - "kafka-1"
    - "kafka-2"
    - "kafka-3"
    - "redis"
    restart: unless-stopped

  # Spark Cluster
  spark-master:
    image: docker.io/bitnami/spark:3-debian-10
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT_NUMBER=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2
    restart: unless-stopped

  spark-worker-1:
    image: docker.io/bitnami/spark:3-debian-10
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKER_WEBUI_PORT=8081
    ports:
      - '8081:8081'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2
    depends_on:
      - spark-master
    restart: unless-stopped

  spark-worker-2:
    image: docker.io/bitnami/spark:3-debian-10
    hostname: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKER_WEBUI_PORT=8082
    ports:
      - '8082:8082'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2
    depends_on:
      - spark-master
    restart: unless-stopped

  spark-worker-3:
    image: docker.io/bitnami/spark:3-debian-10
    hostname: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKER_WEBUI_PORT=8084
    ports:
      - '8085:8084'
    volumes:
      - ./:/home/workspace/
      - ./spark/jars:/opt/bitnami/spark/.ivy2
    depends_on:
      - spark-master
    restart: unless-stopped

networks:
  default:
    driver: bridge